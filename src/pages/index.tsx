import EditGameDialog from "@/components/dialogs/edit-game-dialog";
import GameEntry from "@/components/game-entry/game-entry";
import useGamesCache from "@/hooks/use-games-cache";
import { Game, WithId } from "@/types";
import { Fab, Grid } from "@mui/material";
import AddIcon from "@mui/icons-material/Add";
import Head from "next/head";
import { useState } from "react";
import { styled } from "goober";
import AddGameDialog from "@/components/dialogs/add-game-dialog";

const StyledFab = styled(Fab)`
  position: fixed;
  bottom: 1rem;
  right: 1rem;
`;

const Home = () => {
  const [addGameDialogOpen, setAddGameDialogOpen] = useState(false);
  const [selectedGame, setSelectedGame] = useState<WithId<Game> | null>(null);
  const { games, updateSingleGame, addGame } = useGamesCache("games");

  const handleGameClick = (game: WithId<Game>) => {
    setSelectedGame(game);
  };

  return (
    <>
      <Head>
        <title>GameDB</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Grid container>
        {games.map((game) => (
          <Grid item key={game.id}>
            <GameEntry game={game} onClick={handleGameClick} />
          </Grid>
        ))}
      </Grid>
      {selectedGame && (
        <EditGameDialog
          game={selectedGame}
          onClose={() => setSelectedGame(null)}
          updateSingleGame={updateSingleGame}
          collection="games"
        />
      )}
      <StyledFab
        color="primary"
        aria-label="add"
        onClick={() => setAddGameDialogOpen(true)}
      >
        <AddIcon />
      </StyledFab>
      <AddGameDialog
        open={addGameDialogOpen}
        onClose={() => setAddGameDialogOpen(false)}
        addGame={addGame}
        collection="games"
      />
    </>
  );
};

export default Home;
